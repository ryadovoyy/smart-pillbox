services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: app.develop.Dockerfile
    develop:
      watch:
        - action: sync
          path: .
          target: /app
    ports:
      - "8000:80"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: postgres
    image: postgres:17.6-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 10

  cron:
    container_name: cron
    build:
      context: .
      dockerfile: cron.Dockerfile
    volumes:
      - .:/app
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "pgrep", "cron"]
      interval: 5s
      timeout: 5s
      retries: 3
    depends_on:
      - app

networks:
  default:
    driver_opts:
      com.docker.network.bridge.host_binding_ipv4: 127.0.0.1

volumes:
  pgdata:
